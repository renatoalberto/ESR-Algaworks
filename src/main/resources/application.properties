spring.datasource.url=jdbc:mysql://localhost:3306/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=131232

#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create

# geracao comando ddl a partir do jpa, sem executar, gravando o arquivo ddl.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

spring.flyway.locations=classpath:db/migration,classpath:db/dataDesenvolvimento

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialec=org.hibernate.dialect.MySQL8Dialect

# Habilitando erros na desserializacao de propriedades inexistentes
spring.jackson.deserialization.fail-on-unknown-properties=true
# Habilitando erros na desserializacao de propriedades ignoradas
spring.jackson.deserialization.fail-on-ignored-properties=true
# Estrategias de nomes de propriedades: snake case vs lower camel case
#spring.jackson.property-naming-strategy=SNAKE_CASE

# Habilitando a validacao spring handleNoHandlerFoundException
spring.mvc.throw-exception-if-no-handler-found=true
# Desabilitar o uso do gerenciador padrao de resources no Spring. Com ela ativada o Spring gerencia as respostas padrao de erro 404 por exemplo, impedindo o uso de um Exception Handler
spring.web.resources.add-mappings=false

# hikari - gerencia pool de conexoes com o banco de dados 
# maximum-pool-size - numero maximo de pools - padrao e 10
# minimum-idle - numero minimo de conexoes ociosas - padrao e 10
# idle-timeout - tempo de espera em ociosidade, antes de fechar a conexao - padrao e 10000 milesegundos (10 segundos)
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.idle-timeout=10000

